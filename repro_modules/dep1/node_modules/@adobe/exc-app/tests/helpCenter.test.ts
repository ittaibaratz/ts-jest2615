/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
import Global, {Modules} from '../src/Global';
import helpCenter, {HelpCenterButtonConfig} from '../helpcenter';

describe('helpCenter/index.js', () => {
  const helpCenterConfig = {
    featured: [{
      href: 'https://feature.com',
      label: 'Adobe Experience Cloud Learn & Support',
      path: '/feature'
    }],
    questions: [
      'Question 1?',
      'Question 2?'
    ],
    recommendations: {
      enabled: true,
      terms: [{
        path: '/terms',
        term: 'get started'
      }]
    },
    resources: [{
      href: 'https://marketing.adobe.com/resources/help/en_US/home/index.html',
      label: 'Help Home'
    }]
  };

  beforeEach(() => {
    (Global['exc-module-runtime'] as Modules) = {
      helpCenter: {
        config: helpCenterConfig,
        open: (config) => {
          console.log(config); // eslint-disable-line no-console
        },
        setButton: (config: HelpCenterButtonConfig | HelpCenterButtonConfig[] | null) => {
          console.log(config); // eslint-disable-line no-console
        },
        setButtons: (buttons: HelpCenterButtonConfig[] | null) => {
          console.log(buttons); // eslint-disable-line no-console
        }
      }
    } as Modules;
  });

  it('correctly sets up the connection with module-runtime', () => {
    const setButton = jest.spyOn(Global['exc-module-runtime'].helpCenter, 'setButton');
    const callbackFn = jest.fn();
    helpCenter.setButton({callback: callbackFn, label: 'myButton'});
    expect(setButton).toBeCalledTimes(1);

    const setButtons = jest.spyOn(Global['exc-module-runtime'].helpCenter, 'setButtons');
    helpCenter.setButtons([{callback: callbackFn, id: '1', label: 'myButton'}]);
    expect(setButtons).toBeCalledTimes(1);

    expect(helpCenter.config).toBe(helpCenterConfig);
    const newConfig = Object.assign(helpCenterConfig, {resources: [{href: 'https://newlink.com', label: 'NewLink'}]});
    helpCenter.config = newConfig;
    expect(Global['exc-module-runtime'].helpCenter.config).toBe(newConfig);

    const openSpy = jest.spyOn(Global['exc-module-runtime'].helpCenter, 'open');
    helpCenter.open({
      config: {
        subject: 'Subject',
        type: 'CONTEXTUAL_FEEDBACK_SUBMISSION'
      },
      selectedTab: 'feedback'
    });
    expect(openSpy).toBeCalledTimes(1);
  });
});
