/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
import Global, {Modules} from '../src/Global';
import topbar, {
  Callback,
  CustomFeedbackConfig,
  CustomSearchConfig,
  ExternalFeedbackConfig,
  HelpCenterFeedbackConfig
} from '../topbar';

describe('topbar/index.js', () => {
  beforeEach(() => {
    (Global['exc-module-runtime'] as Modules) = {
      topbar: {
        customEnvLabel: 'Test',
        onHeroClick: (callback: Callback) => {
          console.log(callback); // eslint-disable-line no-console
        },
        setCustomSearch: (config: CustomSearchConfig) => {
          console.log(config); // eslint-disable-line no-console
        },
        setFeedbackButton: (config: CustomFeedbackConfig | HelpCenterFeedbackConfig | ExternalFeedbackConfig | null) => {
          console.log(config); // eslint-disable-line no-console
        },
        solution: {
          icon: 'AdobeExperienceCloud',
          shortTitle: 'AEC',
          title: 'Adobe Experience Cloud22'
        },
        workspaces: [{name: 'Workspace', url: '/workspace'}]
      }
    } as Modules;
  });

  it('correctly sets up the connection with module-runtime', () => {
    expect(true).toEqual(true);
    const searchCallback = jest.fn();
    const setCustomSearchSpy = jest.spyOn(Global['exc-module-runtime'].topbar, 'setCustomSearch');
    topbar.setCustomSearch({callback: searchCallback, enabled: true, open: false});
    expect(setCustomSearchSpy).toBeCalledTimes(1);

    expect(topbar.solution).toStrictEqual({
      icon: 'AdobeExperienceCloud',
      shortTitle: 'AEC',
      title: 'Adobe Experience Cloud22'
    });
    const newConfig = {
      icon: 'AdobeExample',
      shortTitle: 'AEC',
      title: 'Example Solution'
    };
    topbar.solution = newConfig;
    expect(Global['exc-module-runtime'].topbar.solution).toStrictEqual(newConfig);

    expect(topbar.customEnvLabel).toBe('Test');
    topbar.customEnvLabel = 'Beta';
    expect(Global['exc-module-runtime'].topbar.customEnvLabel).toBe('Beta');

    expect(topbar.workspaces).toStrictEqual([{name: 'Workspace', url: '/workspace'}]);
    topbar.workspaces = [{name: 'New Workspace', url: '/newWorkspace'}];
    expect(Global['exc-module-runtime'].topbar.workspaces).toStrictEqual([{name: 'New Workspace', url: '/newWorkspace'}]);

    expect(typeof topbar.onHeroClick).toBe('function');
    const newCallback = () => {};
    const heroClickSpy = jest.spyOn(Global['exc-module-runtime'].topbar, 'onHeroClick');
    topbar.onHeroClick(newCallback);
    expect(heroClickSpy).toBeCalledWith(newCallback);

    const feedbackCallback = jest.fn();
    const feedbackButtonSpy = jest.spyOn(Global['exc-module-runtime'].topbar, 'setFeedbackButton');
    topbar.setFeedbackButton({buttonLabel: 'Beta Feedback', callback: feedbackCallback, enabled: true, type: 'custom'});
    topbar.setFeedbackButton({buttonLabel: 'Beta Feedback', enabled: true, subject: 'Subject', type: 'openFeedback'});
    topbar.setFeedbackButton({buttonLabel: 'Beta Feedback', enabled: true, type: 'external', url: 'http://example.com'});
    expect(feedbackButtonSpy).toBeCalledTimes(3);
  });
});
